package util;

/**
 * 파일명의 구분자 정의
 */
public enum DataType {
    ECEF_EPHMEREDES("ECEF"),
    ECI_EPHMEREDES("ECI"),
    EVENT_PREDICTION("EP_"),
    STATION_KEEPING_MANEUVER("SKM"),
    STATION_RELOCATION_MANEUVER("SRM"),
    FINAL_ORBIT_RAISING_MANEUVER("FOR"),
    WHEEL_OFF_LOADING_TARGET("WOL_TARGET"),
    WHEEL_OFF_LOADING_TIME("WOL_TIME"),
    STATION_ACQUISITION_MANUEVER("SAM"),
    ORBIT_TABLE_UPLOAD("OTB"),
    LMC("LMC"),
    TARGET_STAR_LIST("TARGET_STAR"),
    SCANNER_CALIBRATION("SCANNER_CAL_TM"),
    WOL_TARGET_MGMT_IMP("IMP_WOL_MGMT"),
    WOL_TIME_MGMT_IMP("IMP_WOL_MGMT"),
    EW_NS_SKM_MGMT_IMP("IMP_SKM_MGMT"),
    SA_SKM_MGMT_IMP("IMP_SKM_MGMT"),
    SR_SKM_MGMT_IMP("IMP_SKM_MGMT"),
    FOR_SKM_MGMT_IMP("IMP_SKM_MGMT"),
    ORBIT_UPLOAD_IMP("IMP_ORBIT_UPLOAD"),
    LAE_BURN_MGMT_IMP("IMP_LAE_BURN_MGMT"),
    AMI_MISSION_UPLOAD_IMP("IMP_AMI_MISSION_UPLOAD"),
    AMI_SOLAR_CALIBRATION_IMP("IMP_AMI_SOLAR_CALIBRATION"),
    AMI_TARGET_STAR_LIST_UPLOAD_IMP("IMP_AMI_TARGET_STAR_LIST_UPLOAD"),
    AMI_SCANNER_CALIBRATION_IMP("IMP_AMI_SCANNER_CALIBRATION"),
    AMI_LMC_DATA_UPLOAD_IMP("IMP_AMI_LOS_DATA_UPLOAD"),
    AMI_SCENE_OFFSET_IMP("IMP_AMI_SCENE_OFFSET"),
    MISSION_REQUEST("MR"),
    MISSION_SCHEDULE("MS"),
    GK2A_MISSION_EVENT("GK2A_EVENT"),
    GK2B_MISSION_EVENT("GK2B_EVENT"),

    // GK2A MPS
    AMI_SCENE_DEF("N/A"),
    AMI_TIMELINE_DEF("N/A"),
    MANEUVER_PLAN("MANEUVER_PLAN"),

    // GK2A MSS,
    UHRIT_SCHEDULE("UHRIT"),
    HRIT_SCHEDULE("HRIT"),
    LRIT_SCHEDULE("LRIT"),
    DISSEMINATION_CONVERT_COMMAND("DCC"),
    DISSEMINATION_CONVERT_RESPONSE("DCR"),
    UNKNOWN("UNKNOWN"),

    // GK2A FDS
    MOON_ACQUISITION_CANDIDATE("MAC"),
    COMS_EPHEMERIDES("EPHEMEREDES"),
    GK2B_EPHEMERIDES("GK2B_EPHEMERIDES"),
    FUEL_DATA("FUEL_DT"),
    FOCUSLEOP_LAE_BURN("LAE"),
    FOCUSLEOP_STATION_ACQUISITION("SA_LEOP"),
    FOCUSLEOP_ORBIT_DATA("ORBIT"),
    FOCUSLEOP_RANGING_DATA_GEOSC("RDGEOS"),
    FOCUSLEOP_TRACKING_DATA("LEOPTD"),
    ORBIT_DATA("TLE"),
    POLARIZATION("POLARIZATION"),

    // AMI DPS
    GK2A_AMI_CHANNEL_PARAMETER("AMI_CH_Parameter"),
    L1A_INTERMEDIATE_RESULT(""),
    IMAGE_PRODUCT("");

    public String getKeyword() {
        return keyword;
    }

    private String keyword;

    DataType(String keyword) {
        this.keyword = keyword;
    }

    /**
     * 파일 명의 키워드를 이용해 Data Type 분류
     * @param filename 파일 명.
     * @return DataType Enum.
     */
    public static DataType fromFilename(String filename) {
        for (DataType dataType : values()) {
            if (filename.contains(dataType.keyword)) {
                return dataType;
            }
        }
        return UNKNOWN;
    }
}
